
using Microsoft.Xna.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;
using Terraria;
using Terraria.DataStructures;
using Terraria.ID;
using Terraria.ModLoader;

namespace Ni.DownWell
{
    public class DownwellPlayer : ModPlayer
    {
        public float Jumpvel;
        public float Downvel;
        public float Charger;
        public float MaxCharger;
        public int Combo;
        public Vector2 Backlashvel = new Vector2(0,-20);
        public bool Timevoid;

        public bool FreeShoot;

        public override void OnEnterWorld()
        {
            if (DownWellWorldGen.DownWellWorld)
            {
                player.statLifeMax = 100;
            }
            base.OnEnterWorld(player);
        }
        public override void PreSavePlayer()
        {
            base.PreSavePlayer();
        }
        public override void OnRespawn()
        {
            base.OnRespawn(player);
        }
        public override void OnHurt(Player.HurtInfo info)
        {
            if (DownWellWorldGen.DownWellWorld)
            {
                damage = 20.0;
            }
            base.OnHurt(pvp, quiet, damage, hitDirection, crit, cooldownCounter);
        }
        public override bool Shoot(Item item, EntitySource_ItemUse_WithAmmo source, Vector2 position, Vector2 velocity, int type, int damage, float knockback)
        {
            return base.Shoot(item, source, position, velocity, type, damage, knockback);
        }
        public override void PreUpdate()
        {
            if (DownWellWorldGen.DownWellWorld)
            {
            }
            base.PreUpdate();
        }
        public override void UpdateLifeRegen()
        {
            if (DownWellWorldGen.DownWellWorld)
            {
                //Player.lifeRegen = 0;
                Player.lifeRegenCount = 0;
            }
            base.UpdateLifeRegen();
        }
        public override void PostUpdate()
        {
            if (DownWellWorldGen.DownWellWorld)
            {
                #region 在地上时刷新弹夹并结算连击
                if (Player.velocity.Y == 0f)
                {
                    RefreshCharger();
                    AccountCombo();
                }
                #endregion
            }
            base.PostUpdate();
        }
        public override void PostUpdateEquips()
        {
            base.PostUpdateEquips();
        }
        public override void PreUpdateMovement()
        {
            if (DownWellWorldGen.DownWellWorld)
            {
                #region 移动属性设置
                Player.accRunSpeed *= 2f;
                Player.noFallDmg = true;
                Player.jumpSpeedBoost += 3f;
                Player.maxFallSpeed *= 1f;
                #endregion
                #region 踩人
                Rectangle rect = Player.getRect();
                rect.Offset(0, Player.height / 2);
                rect.Inflate(6, (int)Player.velocity.Y);
                for(int i = 0; i< 200; i++)
                {
                    NPC npc = Main.npc[i];
                    if(!npc.active || npc.dontTakeDamage || npc.friendly || !Player.CanNPCBeHitByPlayerOrPlayerProjectile(npc))
                    {
                        continue;
                    }

                    Rectangle npcrect = npc.getRect();
                    if (rect.Intersects(npcrect) && (npc.noTileCollide || Collision.CanHit(Player.position, Player.width, Player.height, npc.position, npc.width, npc.height)))
                    {
                        float knockback = 5f;
                        int direction = Player.direction;
                        if (Player.velocity.X < 0f)
                            direction = -1;

                        if (Player.velocity.X > 0f)
                            direction = 1;

                        if (Player.whoAmI == Main.myPlayer)
                            Player.ApplyDamageToNPC(npc, 100, knockback, direction, crit: false);

                        npc.immune[Player.whoAmI] = 10;
                        Player.velocity.Y = -10f;
                        Player.GiveImmuneTimeForCollisionAttack(3);
                        Bounce();//踩人效果
                        break;
                    }
                }
                #endregion

            }
            base.PreUpdateMovement();
        }
        public override void ResetEffects()
        {
            if (DownWellWorldGen.DownWellWorld)
            {
                Player.defaultItemGrabRange *= 2;
            }
        }
        public void Bounce()
        {
            Player.velocity.Y -= 10f;
            RefreshCharger();
        }
        public void RefreshCharger() => Charger = MaxCharger;
        public void AccountCombo()
        {
            if (Combo > 8)
            {
                Item.NewItem(Player.GetSource_FromThis(), Player.getRect(), ItemID.GoldCoin, 10, noGrabDelay: true);
            }
            if (Combo > 15)
            {
                MaxCharger += 1;
            }
            if (Combo > 25)
            {
                Player.Heal(20);
            }
        }
    }
}
